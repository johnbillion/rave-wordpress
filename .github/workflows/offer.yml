name: Verify the update offers

on:
  workflow_call:
    inputs:
      tag:
        description: Tag name for WordPress release
        required: true
        type: string

permissions: {}

jobs:
  verify:
    name: ${{ inputs.tag }}
    runs-on: ubuntu-latest
    permissions: {}
    timeout-minutes: 10
    steps:
      - name: Prepare tag name
        id: tag
        uses: johnbillion/rave-wordpress/.github/actions/prepare-tag-name@trunk
        with:
          tag: ${{ inputs.tag }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: offers

      - name: Verify the offer URLs
        env:
          TAG: ${{ steps.tag.outputs.short }}
        run: | #shell
          EXPECTED_URL="https://downloads.w.org/release/wordpress-${TAG}.zip"
          MATCHING_OBJECT=$(jq --arg tag "$TAG" '.[] | select(.version == $tag)' offers.json)
          if [ -z "$MATCHING_OBJECT" ]; then
            echo "No matching version found for tag $TAG"
            exit 1
          fi
          DOWNLOAD_URL=$(echo "$MATCHING_OBJECT" | jq -r '.download')
          if [ "$DOWNLOAD_URL" != "$EXPECTED_URL" ]; then
            echo "Download URL $DOWNLOAD_URL does not match the expected $EXPECTED_URL"
            exit 1
          fi
          PACKAGE_URL=$(echo "$MATCHING_OBJECT" | jq -r '.packages.full')
          if [ "$PACKAGE_URL" != "$EXPECTED_URL" ]; then
            echo "Package URL $PACKAGE_URL does not match the expected $EXPECTED_URL"
            exit 1
          fi
