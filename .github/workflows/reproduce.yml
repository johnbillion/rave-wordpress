name: Reproduce from source

on:
  workflow_call:
    inputs:
      tag:
        description: Tag name for WordPress release
        required: true
        type: string
      source:
        description: Source for WordPress release
        required: true
        type: string

permissions: {}

jobs:
  reproduce:
    name: "${{ inputs.source }}"
    runs-on: ubuntu-latest
    permissions: {}
    timeout-minutes: 10
    steps:
      - name: Prepare tag name
        id: tag
        uses: johnbillion/rave-wordpress/.github/actions/prepare-tag-name@prepare-tag
        with:
          tag: ${{ inputs.tag }}

      - name: Git checkout github.com/wordpress/wordpress-develop
        if: inputs.source == 'github-wordpress-develop'
        run: |
          git clone --no-checkout https://github.com/wordpress/wordpress-develop/ .
          git checkout "tags/${{ steps.tag.outputs.long }}" -b "${{ steps.tag.outputs.long }}"

      - name: Git checkout develop.git.wordpress.org
        if: inputs.source == 'develop.git.wordpress.org'
        run: |
          git clone --no-checkout git://develop.git.wordpress.org/ .
          git checkout "tags/${{ steps.tag.outputs.long }}" -b "${{ steps.tag.outputs.long }}"

      - name: SVN checkout develop.svn.wordpress.org
        if: inputs.source == 'develop.svn.wordpress.org'
        run: |
          svn checkout https://develop.svn.wordpress.org/tags/${{ steps.tag.outputs.short }} .
          rm -rf .svn

      - name: Download zip from core.trac.wordpress.org
        if: inputs.source == 'core.trac.wordpress.org'
        run: |
          wget -O package.zip "https://core.trac.wordpress.org/browser/tags/${{ steps.tag.outputs.short }}?format=zip" \
            --user-agent="WordPress/${{ steps.tag.outputs.branch }}"
          unzip package.zip
          shopt -s dotglob
          mv ${{ steps.tag.outputs.short }}/* .
          shopt -u dotglob
          rm -rf ${{ steps.tag.outputs.short }}
          rm package.zip

      - name: Log file list
        run: |
          ls -la

      - name: Set up Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Log debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version

      - name: Install npm Dependencies
        run: npm ci

      - name: Update Twemoji processing for debugging
        run: |
          sed -i "s/'Unable to fetch Twemoji file list'/files.stderr.toString()/" Gruntfile.js

      - name: Run Emoji precommit task
        run: npm run grunt precommit:emoji
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build WordPress
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: wordpress-${{ steps.tag.outputs.long }}-${{ inputs.source }}
          path: build
          if-no-files-found: error
