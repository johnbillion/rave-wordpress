name: Reproduce and verify packages

on:
  push:
    branches:
      - trunk
    paths:
      - .github/workflows/*
      - composer.json
  pull_request:
    branches:
      - '**'
    paths:
      - .github/workflows/*
      - composer.json
  schedule:
    # Hourly schedule.
    #
    #        ┌───────────── minute           (0 - 59)
    #        │  ┌────────── hour             (0 - 23)
    #        │  │  ┌─────── day of the month (1 - 31)
    #        │  │  │  ┌──── month            (1 - 12 or JAN-DEC)
    #        │  │  │  │  ┌─ day of the week  (0 - 6 or SUN-SAT)
    #        │  │  │  │  │
    #        │  │  │  │  │
    #        │  │  │  │  │
    - cron: '0  *  *  *  *'
  workflow_dispatch:
    inputs:
      version:
        description: Full semver tag name for WordPress release in `x.y.z` format.
        required: true
        type: string

permissions: {}

jobs:
  versions:
    name: Determine branch numbers
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      versions: ${{ steps.fetch.outputs.versions }}
    steps:
      - name: Fetch versions matrix from API data
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: | #shell
          # Fetches the version number from the first three objects which have a `response` of `autoupdate`
          wget -O - https://api.wordpress.org/core/version-check/1.7/ \
            --user-agent='WordPress/6.0' \
            | jq -c '.offers | map(select(.response == "autoupdate")) | .[0:3]' > offers.json
          # Map each version and if the number is in major.minor syntax, append a .0
          versions=$(jq -c '. | map(.version | capture("(?<major>\\d+)\\.(?<minor>\\d+)(\\.(?<patch>\\d+))?") | .major + "." + .minor + "." + (.patch // "0") )' offers.json)
          echo "$versions" > versions.json

      - name: Fetch version matrix from workflow input
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          VERSION: ${{ github.event.inputs.version }}
        run: | #shell
          jq --null-input --compact-output --arg version "${VERSION}" '[$version]' > versions.json

      - name: Output versions from versions.json
        id: fetch
        run: | #shell
          echo versions="$(cat versions.json)" >> "$GITHUB_OUTPUT"

      - name: Save versions.json
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # 4.5.0
        with:
          name: versions
          path: versions.json
          if-no-files-found: error

      - name: Save offers.json
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # 4.5.0
        with:
          name: offers
          path: offers.json
          if-no-files-found: error

  reproduce:
    name: "Reproduce ${{ matrix.tag }}"
    permissions: {}
    needs:
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        source:
          - develop.svn.wordpress.org
          - develop.git.wordpress.org
          - github-wordpress-develop
        include:
          # Only reproduce the latest tag from core.trac.wordpress.org due to rate limiting
          - tag: ${{ fromJson(needs.versions.outputs.versions)[0] }}
            source: core.trac.wordpress.org
      fail-fast: false
    uses: ./.github/workflows/reproduce.yml
    with:
      tag: ${{ matrix.tag }}
      source: ${{ matrix.source }}

  fetch-build:
    name: "Fetch builds ${{ matrix.tag }}"
    permissions: {}
    needs:
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        build:
          - core.svn.wordpress.org
          - core.git.wordpress.org
      fail-fast: false
    uses: ./.github/workflows/fetch-build.yml
    with:
      tag: ${{ matrix.tag }}
      build: ${{ matrix.build }}

  compare:
    name: "Compare ${{ matrix.tag }}"
    permissions: {}
    needs:
      - reproduce
      - fetch-build
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        source:
          - develop.git.wordpress.org
          - github-wordpress-develop
          - core.git.wordpress.org
          - core.svn.wordpress.org
        include:
          # Only compare the latest tag from core.trac.wordpress.org due to rate limiting
          - tag: ${{ fromJson(needs.versions.outputs.versions)[0] }}
            source: core.trac.wordpress.org
      fail-fast: false
    uses: ./.github/workflows/compare.yml
    with:
      tag: ${{ matrix.tag }}
      source: ${{ matrix.source }}

  offers:
    name: ${{ matrix.label }}
    permissions: {}
    needs:
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        label:
          - Verify offers
      fail-fast: false
    uses: ./.github/workflows/offer.yml
    with:
      tag: ${{ matrix.tag }}

  verify-packages:
    name: "Verify ${{ matrix.tag }} packages"
    permissions:
      contents: read
    needs:
      - reproduce
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        package:
          - wordpress.org-zip
          - wordpress.org-tar
          - downloads.wordpress.org-zip
          - downloads.wordpress.org-tar
          - downloads.w.org-zip
          - downloads.w.org-tar
          - github-zip
          - github-tar
          - docker-wordpress
          - wpengine-zip
          - roots-wordpress-full
          - johnpbloch-wordpress
        include:
          # Only verify the latest tag from build.trac.wordpress.org due to rate limiting
          - tag: ${{ fromJson(needs.versions.outputs.versions)[0] }}
            package: build.trac.wordpress.org
      fail-fast: false
    uses: ./.github/workflows/verify.yml
    with:
      tag: ${{ matrix.tag }}
      package: ${{ matrix.package }}

  verify-latest-package:
    name: "Verify ${{ matrix.tag }} packages"
    permissions:
      contents: read
    needs:
      - reproduce
    strategy:
      matrix:
        tag:
          - 'latest'
        package:
          - wordpress.org-zip
          - wordpress.org-tar
      fail-fast: false
    uses: ./.github/workflows/verify.yml
    with:
      tag: ${{ matrix.tag }}
      package: ${{ matrix.package }}

  verify-hashes:
    name: ${{ matrix.label }}
    permissions: {}
    needs:
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        label:
          - Verify hashes
      fail-fast: false
    uses: ./.github/workflows/hashes.yml
    with:
      tag: ${{ matrix.tag }}

  verify-checksums:
    name: ${{ matrix.label }}
    permissions: {}
    needs:
      - versions
    strategy:
      matrix:
        tag: ${{ fromJson(needs.versions.outputs.versions) }}
        label:
          - Verify checksums
      fail-fast: false
    uses: ./.github/workflows/checksums.yml
    with:
      tag: ${{ matrix.tag }}
